Il faudrait faire évoluer  :

- Bootstrap de argocd (là on l'a installé à la main) -> Fait
- Ajout de l'application argocd selfmanager dans git -> Fait
- Ajouter des projets (appProject) : https://blog.stackademic.com/scalable-gitops-a-deep-dive-into-multi-project-setup-in-argo-cd-19c5475daad4
- Ajout de cert-manager pour acceder aux applications en HTTPS
- Securiser l'acces à la GUI argocd (via IP source) / Ne pas avoir de IP LB, mais un Ingress sur ClusterIP
- Avoir pour l'application canary staging une autre ip (c'est pour savoir comment on fait avec kustomize)
- Avoir pour l'application canary prod une autre ip différente du staging (c'est pour savoir comment on fait avec kustomize)
- Avoir des rollbacks automatisés avec métriques (prometheus) et tester avec une mauvaise image (bad-blue ou slow-green cf https://hub.docker.com/r/argoproj/rollouts-demo)
- Rendre privé le repo github
- Mettre un HPA et une diff customisation
- Faire du mesh avec Istio (définir les buts, je ne comprends encore pas bien comment fonctonne et a quoi sert un service mesh)
- Sécuriser l'accès à l'API K8s (c'est une IP publique sur le LB)

A terme :
- Reprendre le code app rollouts dans un CI/CD et faire des builds (en utilisant le repo github)
- Faire un env de test avec chaque PR (+tag)
- Ajout de image-updater (et trouver un exemple d'application)
